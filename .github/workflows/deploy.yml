name: Build & Deploy Spring-Boot Container

on:
  push:
    branches:
      - master
      - develop

jobs:
  build-and-push:
    name: Build and push Docker image
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_PASSWORD }}

      - name: Build and push image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/taf-be:${{ github.ref == 'refs/heads/develop' && 'staging' || 'latest' }}

  deploy:
    name: SSH deploy to server
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository (for consistency)
        uses: actions/checkout@v4

      # ===== Deploy on Server =====
      - name: Deploy on Server TAF-BE
        uses: appleboy/ssh-action@v0.1.7
        with:
          host: ${{ secrets.SERVER_HOST }}
          port: ${{ secrets.SERVER_SSH_PORT }}
          username: ${{ secrets.SERVER_USER }}
          key: ${{ secrets.SERVER_SSH_KEY }}
          script: |
            cd /home/manager/orchestrator/taf
            # Determine if we are deploying to production or staging
            if [ "${GITHUB_REF}" == "refs/heads/develop" ]; then
              IMAGE_TAG="staging"
              SERVICE="taf-be-staging"
            else
              IMAGE_TAG="latest"
              SERVICE="taf-be"
            fi
            echo "Deploying with image tag: $IMAGE_TAG"
            echo "Using service: $SERVICE"
            

            # Update Docker image
            docker compose pull $SERVICE

            # Recreate only the appropriate service
            docker compose up -d $SERVICE
